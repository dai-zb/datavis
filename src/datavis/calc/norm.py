import math

a = [0.1570796288E1, 0.3706987906E-1,
     -0.8364353589E-3, -0.2250947176E-3,
     0.6841218299E-5, 0.5824238515E-5,
     -0.1045274970E-5, 0.8360937017E-7,
     -0.3231081277E-8, 0.3657763036E-10,
     0.6936233982E-12]


# 标准正态分布函数分位数函数
# 山内近似公式，最大误差4.9e-4
# 分位数
def norm_distribution_quantile(p):
    assert 0 < p < 1
    if p == 0.5:
        return 0

    if 0 < p < 0.5:
        alpha = p
    else:  # 0.5 < p < 1:
        alpha = 1 - p

    y = -math.log(4 * alpha * (1 - alpha))

    ##################################
    # 山内近似公式，最大误差4.9e-4
    # u = np.sqrt(y * (2.0611786 - 5.7262204 / (y + 11.640595)))
    ##################################
    # Toda近似公式，最大误差1.2e-8
    u = 0
    for i, aa in enumerate(a):
        u += aa * (y ** i)
    u = math.sqrt(y * u)
    ##################################

    if 0 < p < 0.5:
        return -u
    else:  # 0.5 < p < 1:
        return u
